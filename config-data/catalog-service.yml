server:
  port: ${PORT:${SERVER_PORT:0}}

idRandom: ${random.value}

spring:
  application:
    name: catalog-service

  data:
    mongodb:
      database: catalog
      port: 27017
      host: localhost
  
  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672

  zipkin:
    baseUrl: http://localhost:9411/

resilience4j.circuitbreaker:
  instances:
    MovieClient: 
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
    SerieClient: 
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10

resilience4j.retry:
  instances:
    retryMovies: 
      maxAttempts: 3
      waitDuartion: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
    retrySeries: 
      maxAttempts: 3
      waitDuartion: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException

eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/